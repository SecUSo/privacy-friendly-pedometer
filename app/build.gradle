apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


def pfaFile = rootProject.file('pfa.properties')

def getAvailableLocales() {
    def tree = fileTree(dir: 'src/main/res', include: '**/strings.xml')
    return tree.collect {
        def lang = it.getParentFile().getName() - "values-" - "values"

        // We want a name which would be understood by Locale::forLanguageTag, so we should do
        // do a simple conversion for an edge case:
        //   "pt-rBR" -> "pt-BR"
        //   "zh-rCN" -> "zh-CN"
        //   and so on
        lang = lang.replace("-r", "-")

        if (lang.empty) {
            lang = "en"
        }

        lang
    }
}

android {
    namespace 'org.secuso.privacyfriendlyactivitytracker'

    signingConfigs {
        if (pfaFile.exists()) {
            'pfa-key' {
                def pfa = new Properties()
                pfa.load(new FileInputStream(pfaFile))

                storePassword pfa['storePassword']
                keyAlias pfa['keyAlias']
                keyPassword pfa['keyPassword']
                storeFile file(pfa['storeFile'])
            }
        }
    }
    compileSdk 34

    defaultConfig {
        applicationId 'org.secuso.privacyfriendlyactivitytracker'
        minSdkVersion 17
        targetSdkVersion 34
        versionCode 18
        versionName "3.1.2-google"
        multiDexEnabled true

    def escapedLocales = getAvailableLocales().collect { "\"" + it + "\"" }
        buildConfigField "String[]", "AVAILABLE_LOCALES", String.format("{ %s }", escapedLocales.join(","))

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "pfa-pedometer-${variant.name}-v${variant.versionName}.apk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            if (pfaFile.exists()) {
                signingConfig signingConfigs.'pfa-key'
            }
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    kotlin {
        jvmToolchain(17)
    }

    lint {
        lintConfig = file("lint.xml")
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    project(':backup-api') {
        tasks.named('compileDebugAndroidTestKotlin').configure {
            enabled = false
        }
    }
}


repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':backup-api')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.0-beta1'
    implementation 'androidx.multidex:multidex:2.0.1'  //with androidx libraries
    implementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.test.espresso:espresso-contrib:3.5.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'

    def work_version = '2.9.0'
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation 'androidx.sqlite:sqlite-ktx:2.4.0'
    implementation 'androidx.sqlite:sqlite-framework:2.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation("com.github.YarikSOffice:lingver:1.3.0")
}

